hc_xAxis( title = "" ) %>%
hc_title(text = "Salary" )
mygraph
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = DeptID,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = df_clean$DeptID,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = DeptID,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = Department,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
mygraph <- hchart(
df_clean,
"column",
hcaes(x = Department, y = Salary, name = Department, drilldown = Department),
name = "Salary",
colorByPoint = TRUE
)
mygraph <- mygraph %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown)
)
mygraph <- mygraph %>%
hc_tooltip(
useHTML = TRUE
) %>%
hc_yAxis( title = "") %>%
hc_xAxis( title = "" ) %>%
hc_title(text = "Salary" )
mygraph
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = Department,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
mygraph <- hchart(
df_clean,
"column",
hcaes(x = Department, y = Salary, name = Department, drilldown = Department),
name = "Salary",
colorByPoint = F
)
mygraph <- mygraph %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown)
)
mygraph <- mygraph %>%
hc_tooltip(
useHTML = TRUE
) %>%
hc_yAxis( title = "") %>%
hc_xAxis( title = "" ) %>%
hc_title(text = "Salary" )
mygraph
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = Department,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
mygraph <- hchart(
df_clean,
"column",
hcaes(x = Department, y = Salary, name = Department, drilldown = Department),
name = "Salary",
colorByPoint = TRUE
)
mygraph <- mygraph %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown)
)
mygraph <- mygraph %>%
hc_tooltip(
useHTML = TRUE
) %>%
hc_yAxis( title = "") %>%
hc_xAxis( title = "" ) %>%
hc_title(text = "Salary" )
mygraph
df_baru <-
select(df_clean, Department, Position, Salary) %>%
arrange(desc(Salary)) %>%
group_by(Department, Position) %>%
summarise(meanvalue = mean(Salary))
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = Department,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
mygraph <- hchart(
df_clean,
"column",
hcaes(x = Department, y = Salary, name = Department, drilldown = Department),
name = "Salary",
colorByPoint = TRUE
)
mygraph <- mygraph %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown)
)
mygraph <- mygraph %>%
hc_tooltip(
useHTML = TRUE
) %>%
hc_yAxis( title = "") %>%
hc_xAxis( title = "" ) %>%
hc_title(text = "Salary" )
df_baru <-
select(df_clean, Department, Position, Salary) %>%
arrange(desc(Salary)) %>%
group_by(Department, Position) %>%
summarize(meanvalue = mean(Salary))
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = Department,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
mygraph <- hchart(
df_clean,
"column",
hcaes(x = Department, y = Salary, name = Department, drilldown = Department),
name = "Salary",
colorByPoint = TRUE
)
mygraph <- mygraph %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown)
)
mygraph <- mygraph %>%
hc_tooltip(
useHTML = TRUE
) %>%
hc_yAxis( title = "") %>%
hc_xAxis( title = "" ) %>%
hc_title(text = "Salary" )
df_baru <-
select(df_clean, Department, Position, Salary) %>%
arrange(desc(Salary)) %>%
group_by(Department, Position) %>%
summarize(dailyAvg = mean(Salary))
drilldown <- df_clean %>%
group_nest(Department) %>%
mutate(
id = Department,
type = "column",
data = map(data, mutate, name = Position, y = Salary),
data = map(data, list_parse)
)
mygraph <- hchart(
df_clean,
"column",
hcaes(x = Department, y = Salary, name = Department, drilldown = Department),
name = "Salary",
colorByPoint = TRUE
)
mygraph <- mygraph %>%
hc_drilldown(
allowPointDrilldown = TRUE,
series = list_parse(drilldown)
)
mygraph <- mygraph %>%
hc_tooltip(
useHTML = TRUE
) %>%
hc_yAxis( title = "") %>%
hc_xAxis( title = "" ) %>%
hc_title(text = "Salary" )
df_baru%>%
group_by(Department, Position) %>%
summarize(dailyAvg = mean(Salary))
df_baru%>%
group_by(Department, Position) %>%
summarize(dailyAvg = mean(Salary))
source("C:/Users/muham/Downloads/LBB3/global.R", echo=TRUE)
shiny::runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('C:/Users/muham/Downloads/Compressed/workforce-master/workforce-master')
shiny::runApp('HumanResource')
source("C:/Users/muham/Downloads/LBB3/global.R", echo=TRUE)
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
knitr::opts_chunk$set(echo = TRUE)
hchart(hc2, "lollipop", hcaes(name = Employee_Name, low = EmpSatisfaction),name = "EmpSatisfaction") %>%
hc_xAxis(type = "category") %>%
hc_yAxis(labels = list(format = "{value}")) %>%
hc_title(text="Employee Satisfaction under {var}",align="center")
hchart(df_clean, "lollipop", hcaes(name = Employee_Name, low = EmpSatisfaction),name = "EmpSatisfaction") %>%
hc_xAxis(type = "category") %>%
hc_yAxis(labels = list(format = "{value}")) %>%
hc_title(text="Employee Satisfaction under {var}",align="center")
View(df_clean)
df_clean_2 <- mutate(.data = df_clean, as.numeric(df_clean$EmpSatisfaction))
class(df_clean_2$EmpSatisfaction)
df_clean_2$EmpSatisfaction <- mutate(.data = df_clean, as.numeric(df_clean$EmpSatisfaction))
class(df_clean_2$EmpSatisfaction)
df_clean_2$EmpSatisfaction <- mutate(.data = df_clean$EmpSatisfaction, as.numeric(df_clean$EmpSatisfaction))
mutate_at(.vars = c("EmpSatisfaction"), .funs = as.factor) %>%
hchart(df_clean, "lollipop", hcaes(name = Employee_Name, low = EmpSatisfaction),name = "EmpSatisfaction") %>%
hc_xAxis(type = "category") %>%
hc_yAxis(labels = list(format = "{value}")) %>%
hc_title(text="Employee Satisfaction under {var}",align="center")
df_clean %>% mutate_at(.vars = c("EmpSatisfaction"), .funs = as.factor) %>%
hchart(df_clean, "lollipop", hcaes(name = Employee_Name, low = EmpSatisfaction),name = "EmpSatisfaction") %>%
hc_xAxis(type = "category") %>%
hc_yAxis(labels = list(format = "{value}")) %>%
hc_title(text="Employee Satisfaction under {var}",align="center")
df_clean_2 <- df_clean %>% mutate_at(.vars = c("EmpSatisfaction"), .funs = as.factor)
hchart(df_clean_2, "lollipop", hcaes(name = Employee_Name, low = EmpSatisfaction),name = "EmpSatisfaction") %>%
hc_xAxis(type = "category") %>%
hc_yAxis(labels = list(format = "{value}")) %>%
hc_title(text="Employee Satisfaction under {var}",align="center")
df_clean_2 <- df_clean %>% mutate_at(.vars = c("EmpSatisfaction"), .funs = as.numeric())
df_clean_2 <- df_clean %>% mutate_at(.vars = c("EmpSatisfaction"), .funs = as.numeric
hchart(df_clean_2, "lollipop", hcaes(name = Employee_Name, low = EmpSatisfaction),name = "EmpSatisfaction") %>%
df_clean_2 <- df_clean %>% mutate_at(.vars = c("EmpSatisfaction"), .funs = as.numeric)
hchart(df_clean_2, "lollipop", hcaes(name = Employee_Name, low = EmpSatisfaction),name = "EmpSatisfaction") %>%
hc_xAxis(type = "category") %>%
hc_yAxis(labels = list(format = "{value}")) %>%
hc_title(text="Employee Satisfaction under {var}",align="center")
runApp('HumanResource')
source("C:/Users/muham/Downloads/LBB3/global.R", echo=TRUE)
runApp('HumanResource')
mean(df$Absences)
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
dashboardPage(skin = "blue",
# Fungsi dashboardHeader() adalah bagian untuk membuat header
dashboardHeader(title = "Human Resource Analysis"),
# Fungsi dashboardSidebar() adalah bagian untuk membuat sidebar
dashboardSidebar(
#sidebarMenu adalah fungsi untuk membuat bagian menu disamping
sidebarMenu(
#menutItem adalah fungsi untuk membuat kolom tab menu dibagian menu samping
menuItem(
text = "Menu 1", # text adalah parameter untuk memberikan Nama menu
tabName = "menu_1", # tabName adalah parameter memberikan identifikasi yang mewakliki bagian menu tersebut
icon = icon("video")), # icon adalah parameter untuk memberikan lambang pada menu tersebut
menuItem(text = "Menu 2",
tabName = "menu_2",
icon = icon("youtube")),
menuItem(text = "Menu 3",
tabName = "menu_3",
icon = icon("table")),
menuItem(text = "Data",
tabName = "menu_4",
icon = icon("data"))
)
),
dashboardBody(
tags$head(
tags$link(rel = "stylesheet", type = "text/css", href = "custom.css")
),
tabItems(
# --------- Page 1 : Resource
tabItem(
tabName = "menu_1",
fluidPage(
h2(tags$b("Human Resource")),
br(),
div(style = "text-align:justify",
p("Human resources is the set of people who make up the workforce of an organization, business sector, industry, or economy.",
"A narrower concept is human capital, the knowledge and skills which the individuals command.",
"Similar terms include manpower, labor, personnel, associates or simply: people."),
br()
)
),
fluidPage(
box(width = 3,
height = 425,
h3("First Page"),
div(style = "text-align:justify",
p("In this page I'm Talking about the distribution data of Human Resource, There are 3 aspects that include in this page, there are :
Recruitment Source, Engagement Survey, and Special Project Count"),
br(),
h3("Second Page"),
p("In the second Page you can see it by clicking '' in the side menu, from there you can see that how the salary is effecting the employee satisfaction
and their performance, then there are also the average salary from each position in each Department",
h3("Data Source :"),
a(href = "https://www.kaggle.com/code/ahmedsafwatgb20/human-resources/data",
"Kaggle"))
),
background = "light-blue"
),
box(
highchartOutput(outputId = "hcontainer"),
width="9")
),
fluidPage(
box(
highchartOutput(outputId = "hcontainer6"),
width = "9"
),
box(
selectInput("rect",label= h4("Select Source :"),choices = df_clean$RecruitmentSource, selected = "Google Search", multiple = T),
br(),
sliderInput(inputId = "rectr", label = "Project Count :", 0,9,3, animate = T,ticks = T),
br(),
sliderInput(inputId = "rectrr", label = "Engagement Survey :", 0,5,2, animate = T, ticks = T),
width = 3,
height = 425,
background = "light-blue",
solidHeader = T)
)
),
# --------- Page 2 : Employee
tabItem(
tabName = "menu_2",
# --------- INPUT
fluidRow(
box(
width = 12,
# selecInput() adalah fungsi untuk memilih salah satu category youtube
sliderInput(inputId = "range", label = "Salary",0,250000,100000, animate = T, width = 1800)
)
),
fluidRow(
box(
highchartOutput(outputId = "hcontainer2"),
height = 400
),
box(
highchartOutput(outputId = "hcontainer3"),
height = 400
),
box(
highchartOutput(outputId = "hcontainer5"),
height = 500
),
fluidRow(
valueBox("8",
"Total Unique Department",
icon = icon("city"),
color = "maroon",
width = 6),
valueBox("31",
"Total Unique Position",
icon = icon("user"),
color = "aqua",
width = 6),
valueBox("IT/IS",
"Most Paid Departments by Average besides Executive Office",
icon = icon("city"),
color = "maroon",
width = 6),
valueBox("CIO",
"Most Paid Position by Average besides Executive Office",
icon = icon("user"),
color = "aqua",
width = 6)
)
)
),
tabItem(
tabName = "menu_3",
fluidRow(
box(
selectInput("name",label= h4("Select Manager Name :"),choices = df_clean$ManagerName),
width = 12
),
box(
highchartOutput(outputId = "hcontainer7"),
width = 12
),
box(
highchartOutput(outputId = "hcontainer8"),
width = 4
),
box(
highchartOutput(outputId = "hcontainer9"),
width = 4
),
box(
valueBoxOutput(outputId = "Box1"),
valueBoxOutput(outputId = "Box2"),
width = 4
)
)
),
# --------- page 4 : data
tabItem(
tabName = "menu_4",
DT::dataTableOutput(outputId = "hcontainer4")
)
)
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
runApp('HumanResource')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
